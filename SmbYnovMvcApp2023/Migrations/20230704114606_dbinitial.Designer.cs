// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmbYnovMvcApp2023.Data;

#nullable disable

namespace SmbYnovMvcApp2023.Migrations
{
    [DbContext(typeof(AppYnovContext))]
    [Migration("20230704114606_dbinitial")]
    partial class dbinitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmbYnovMvcApp2023.Models.Device", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<int>("ConnectivityType")
                        .HasColumnType("int");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<string>("FonctionalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("LastConnected")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmbYnovMvcApp2023.Models.ServerSettings", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTimeOffset?>("LastConnected")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServerSettings");
                });

            modelBuilder.Entity("SmbYnovMvcApp2023.Models.TimeSeries", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTimeOffset>("DateTimeOffset")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DeviceId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("TimeSeriesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UplinkMessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UplinkMessageId");

                    b.ToTable("TimeSeries");
                });

            modelBuilder.Entity("SmbYnovMvcApp2023.Models.UplinkMessage", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<int>("ConnectionConfig")
                        .HasColumnType("int");

                    b.Property<int>("ConnectionFrequency")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DeviceId1")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("RawPayLoad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RecieveIdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TypeFrequency")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId1");

                    b.ToTable("UplinkMessages");
                });

            modelBuilder.Entity("SmbYnovMvcApp2023.Models.TimeSeries", b =>
                {
                    b.HasOne("SmbYnovMvcApp2023.Models.UplinkMessage", "UplinkMessage")
                        .WithMany()
                        .HasForeignKey("UplinkMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UplinkMessage");
                });

            modelBuilder.Entity("SmbYnovMvcApp2023.Models.UplinkMessage", b =>
                {
                    b.HasOne("SmbYnovMvcApp2023.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });
#pragma warning restore 612, 618
        }
    }
}
